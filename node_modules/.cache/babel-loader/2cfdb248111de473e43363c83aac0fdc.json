{"ast":null,"code":"var _jsxFileName = \"/Users/auroremartin/Downloads/build-twitter-with-react/src/components/Feed.js\",\n    _s = $RefreshSig$();\n\nimport PostsList from \"components/PostsList\";\nimport React from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { getPosts } from \"../utils/api-client\";\nimport FollowCard from \"./FollowCard\";\nimport Spinner from \"./Spinner\";\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [page, setPage] = React.useState(2);\n  const [hasFinished, setHasFinished] = React.useState(false);\n  const {\n    data: posts,\n    isLoading,\n    isSuccess,\n    isFetchingNextPage,\n    fetchNextPage\n  } = useInfiniteQuery(\"Posts\", getPosts);\n  React.useEffect(() => {\n    const hasFinished = posts === null || posts === void 0 ? void 0 : posts.pages.some(p => p.length < 20);\n    setHasFinished(hasFinished);\n  }, [posts]);\n  useBottomScrollListener(() => {\n    if (hasFinished) return;\n    fetchNextPage({\n      pageParam: page\n    });\n    setPage(page => page + 1);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostsList, {\n      posts: posts,\n      isLoading: isLoading,\n      isSuccess: isSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isFetchingNextPage && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 30\n    }, this), hasFinished && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message text-info\",\n        children: \"You have reached the end!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(FollowCard, {\n        noPop: true,\n        length: 7,\n        title: \"Follow more users to see their posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(Feed, \"JiuqZ9mNUQ9UHFK0eEwN3xKxCnQ=\", false, function () {\n  return [useInfiniteQuery, useBottomScrollListener];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/auroremartin/Downloads/build-twitter-with-react/src/components/Feed.js"],"names":["PostsList","React","useInfiniteQuery","getPosts","FollowCard","Spinner","useBottomScrollListener","Feed","page","setPage","useState","hasFinished","setHasFinished","data","posts","isLoading","isSuccess","isFetchingNextPage","fetchNextPage","useEffect","pages","some","p","length","pageParam"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,uBAAT,QAAwC,8BAAxC;;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,KAAK,CAACS,QAAN,CAAe,CAAf,CAAvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,KAAf,CAAtC;AAEA,QAAM;AAAEG,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA,kBAArC;AAAyDC,IAAAA;AAAzD,MAA2EhB,gBAAgB,CAAC,OAAD,EAAUC,QAAV,CAAjG;AAEAF,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,UAAMR,WAAW,GAAGG,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEM,KAAP,CAAaC,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAW,EAAlC,CAApB;AACAX,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAHD,EAGG,CAACG,KAAD,CAHH;AAKAR,EAAAA,uBAAuB,CAAC,MAAM;AAC5B,QAAIK,WAAJ,EAAiB;AACjBO,IAAAA,aAAa,CAAC;AAAEM,MAAAA,SAAS,EAAEhB;AAAb,KAAD,CAAb;AACAC,IAAAA,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAP;AACD,GAJsB,EAIpB,GAJoB,CAAvB;AAMA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEM,KAAlB;AAAyB,MAAA,SAAS,EAAEC,SAApC;AAA+C,MAAA,SAAS,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,kBAAkB,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFzB,EAGCN,WAAW,iBAAI;AAAA,8BAAE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,eAChB,QAAC,UAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,MAAM,EAAE,CAFV;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cADgB;AAAA,oBAHhB;AAAA,kBADF;AAYD;;GA9BuBJ,I;UAK2DL,gB,EAOjFI,uB;;;KAZsBC,I","sourcesContent":["import PostsList from \"components/PostsList\";\nimport React from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { getPosts } from \"../utils/api-client\";\nimport FollowCard from \"./FollowCard\";\nimport Spinner from \"./Spinner\";\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\n\n\nexport default function Feed() {\n\n  const [page,setPage] = React.useState(2);\n  const [hasFinished, setHasFinished] = React.useState(false);\n\n  const { data: posts, isLoading, isSuccess, isFetchingNextPage, fetchNextPage } = useInfiniteQuery(\"Posts\", getPosts);\n\n  React.useEffect(() => {\n    const hasFinished = posts?.pages.some(p => p.length < 20 );\n    setHasFinished(hasFinished);\n  }, [posts]);\n\n  useBottomScrollListener(() => {\n    if (hasFinished) return;\n    fetchNextPage({ pageParam: page });\n    setPage(page => page + 1);\n  }, 200);\n  \n  return (\n    <>\n      <PostsList posts={posts} isLoading={isLoading} isSuccess={isSuccess}/>\n      {isFetchingNextPage && <Spinner />}\n    {hasFinished && <><div className=\"message text-info\">You have reached the end!</div>\n    <FollowCard\n      noPop\n      length={7}\n      title=\"Follow more users to see their posts\"\n    /></>}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}