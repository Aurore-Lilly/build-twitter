{"ast":null,"code":"import axios from 'axios';\nimport { queryClient } from '../AppProviders';\nconst client = axios.create();\nexport async function authenticate() {\n  return await client.get('/auth/login').then(res => res.data.user);\n}\nexport async function login(payload) {\n  await client.post('/auth/login', payload);\n  window.location.pathname = \"/\";\n}\nexport async function signup(payload) {\n  await client.post('/auth/signup', payload);\n  window.location.assign('/settings/profile?redirected=true');\n}\nexport async function logout() {\n  await client.get('/auth/logout');\n  window.location.pathname = '/';\n}\nexport async function getNotifications() {}\nexport function readNotification() {}\nexport async function getPost() {}\nexport async function getReplies() {}\nexport async function getUserTimeline() {}\nexport async function getPosts() {\n  return await client.get('/api/home_timeline').then(res => res.data.posts);\n}\nexport async function getPostLikes() {}\nexport async function followUser() {}\nexport async function unfollowUser() {}\nexport async function getPostReposts() {}\nexport async function getUserFollowers() {}\nexport async function getFriends() {}\nexport async function getUserSuggestions() {}\nexport async function getTrends() {}\nexport async function getSearchResults() {}\nexport async function likePost(post) {\n  await client.get(`/api/like/${post.id_str}`);\n  await queryClient.invalidateQueries('Posts');\n}\nexport async function unlikePost(post) {\n  await client.get(`/api/unlike/${post.id_str}`);\n  await queryClient.invalidateQueries('Posts');\n}\nexport async function unrepostPost(post) {\n  await client.post(`/api/unrepost`, post);\n  await queryClient.invalidateQueries('Posts');\n}\nexport async function repostPost(post) {\n  await client.post(`/api/repost`, post);\n  await queryClient.invalidateQueries('Posts');\n}\nexport async function updateUserDetails(user) {\n  await client.post('/api/updateuser', user);\n}\nexport async function createPost(post, url = \"/api/post\") {\n  await client.post(url, post);\n  await queryClient.invalidateQueries('Posts');\n}\nexport async function getPostById(postId) {\n  return await client.get(`/api/post/${postId}`).then(res => res.data.post);\n}","map":{"version":3,"sources":["/Users/auroremartin/Downloads/build-twitter-with-react/src/utils/api-client.js"],"names":["axios","queryClient","client","create","authenticate","get","then","res","data","user","login","payload","post","window","location","pathname","signup","assign","logout","getNotifications","readNotification","getPost","getReplies","getUserTimeline","getPosts","posts","getPostLikes","followUser","unfollowUser","getPostReposts","getUserFollowers","getFriends","getUserSuggestions","getTrends","getSearchResults","likePost","id_str","invalidateQueries","unlikePost","unrepostPost","repostPost","updateUserDetails","createPost","url","getPostById","postId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { queryClient } from '../AppProviders';\n\nconst client = axios.create();\n\nexport async function authenticate() {\n   return await client.get('/auth/login').then((res) => res.data.user);\n}\n\nexport async function login(payload) {\n   await client.post('/auth/login', payload);\n   window.location.pathname = \"/\";\n}\n\nexport async function signup(payload) {\n   await client.post('/auth/signup', payload);\n   window.location.assign('/settings/profile?redirected=true'); \n}\n\nexport async function logout() {\n   await client.get('/auth/logout');\n   window.location.pathname = '/';\n}\n\nexport async function getNotifications() {}\n\nexport function readNotification() {}\n\nexport async function getPost() {}\n\nexport async function getReplies() {}\n\nexport async function getUserTimeline() {}\n\nexport async function getPosts() {\n   return await client.get('/api/home_timeline').then(res => res.data.posts);\n}\n\nexport async function getPostLikes() {}\n\nexport async function followUser() {}\n\nexport async function unfollowUser() {}\n\nexport async function getPostReposts() {}\n\nexport async function getUserFollowers() {}\n\nexport async function getFriends() {}\n\nexport async function getUserSuggestions() {}\n\nexport async function getTrends() {}\n\nexport async function getSearchResults() {}\n\nexport async function likePost(post) {\n   await client.get(`/api/like/${post.id_str}`);\n   await queryClient.invalidateQueries('Posts');\n}\n\nexport async function unlikePost(post) {\n   await client.get(`/api/unlike/${post.id_str}`);\n   await queryClient.invalidateQueries('Posts');\n}\n\nexport async function unrepostPost(post) {\n   await client.post(`/api/unrepost`, post);\n   await queryClient.invalidateQueries('Posts');\n}\n\nexport async function repostPost(post) {\n   await client.post(`/api/repost`, post);\n   await queryClient.invalidateQueries('Posts');\n}\n\nexport async function updateUserDetails(user) {\n   await client.post('/api/updateuser', user);\n}\n\nexport async function createPost(post, url = \"/api/post\") {\n   await client.post(url, post);\n   await queryClient.invalidateQueries('Posts');\n}\n\nexport async function getPostById(postId) {\n   return await client.get(`/api/post/${postId}`).then(res => res.data.post);\n}\n"]},"metadata":{},"sourceType":"module"}